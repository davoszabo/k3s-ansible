alertmanager:
  enabled: true

grafana:
  enabled: {{ prometheus.grafana.enabled }}
  assertNoLeakedSecrets: false
  persistence:
    enabled: {{ prometheus.grafana.persistence.enabled }}
    size: {{ prometheus.grafana.persistence.size }}
{% if prometheus.grafana.persistence.existingClaim|length %}
    existingClaim: {{ prometheus.grafana.persistence.existingClaim }}
{% endif %}
  grafana.ini:
    auth:
      signout_redirect_url: {{ prometheus.grafana.oidc.signout_redirect_url }}
      oauth_auto_login: {{ prometheus.grafana.oidc.oauth_auto_login }}
    auth.generic_oauth:
      name: {{ prometheus.grafana.oidc.name }}
      enabled: {{ prometheus.grafana.oidc.enabled }}
      client_id: {{ prometheus.grafana.oidc.client_id }}
      client_secret: {{ prometheus.grafana.oidc.client_secret }}
      scopes: {{ prometheus.grafana.oidc.scopes }}
      auth_url: {{ prometheus.grafana.oidc.auth_url }}
      token_url: {{ prometheus.grafana.oidc.token_url }}
      api_url: {{ prometheus.grafana.oidc.api_url }}
      role_attribute_path: {{ prometheus.grafana.oidc.role_attribute_path }}
{% if is_cert_untrusted %}
      tls_client_ca: /etc/grafana/ssl/ca-cert.crt
{% endif %}
    server:
      root_url: "https://{{ prometheus.grafana.subdomain_name + '.' + traefik.domain_name }}"
{% if is_cert_untrusted %}
  extraSecretMounts:
    - name: ca-cert-secret
      mountPath: /etc/grafana/ssl/ca-cert.crt
      subPath: ca-cert.crt
      secretName: ca-cert-secret
      readOnly: true
      optional: false
{% endif %}

kubeApiServer:
  enabled: true

kubelet:
  enabled: true
  namespace: kube-system

kubeControllerManager:
  enabled: true

  ## If your kube controller manager is not deployed as a pod, specify IPs it can be found on
  ##
  endpoints: []
  # - 10.141.4.22
  # - 10.141.4.23
  # - 10.141.4.24

kubeEtcd:
  enabled: true

  ## If your etcd is not deployed as a pod, specify IPs it can be found on
  ##
  endpoints: []
  # - 10.141.4.22
  # - 10.141.4.23
  # - 10.141.4.24

kubeScheduler:
  enabled: true

  ## If your kube scheduler is not deployed as a pod, specify IPs it can be found on
  ##
  endpoints: []
  # - 10.141.4.22
  # - 10.141.4.23
  # - 10.141.4.24

kubeProxy:
  enabled: true

  ## If your kube proxy is not deployed as a pod, specify IPs it can be found on
  ##
  endpoints: []
  # - 10.141.4.22
  # - 10.141.4.23
  # - 10.141.4.24

prometheus:
  enabled: true



# The GroupName here is used to identify your company or business unit that
# created this webhook.
# For example, this may be "acme.mycompany.com".
# This name will need to be referenced in each Issuer's `webhook` stanza to
# inform cert-manager of where to send ChallengePayload resources in order to
# solve the DNS01 challenge.
# This group name should be **unique**, hence using your own company's domain
# here is recommended.
groupName: {{ traefik.domain_name }}

logLevel: 2

replicaCount: 1

duckdns:
  token:

secret:
  existingSecret: true
  existingSecretName: "duckdns-token-secret"

clusterIssuer:
  email: {{ cert_manager.duckdns.email }}
  staging:
    create: false
  production:
    create: false

image:
  repository: joshuakraitberg/cert-manager-webhook-duckdns
  tag: 1.4.2
  pullPolicy: IfNotPresent

certManager:
  serviceAccountName: cert-manager

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

service:
  type: ClusterIP
  port: 443

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

# Pod Security Context
# ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
securityContext:
  runAsNonRoot: true
  runAsUser: 11000
  seccompProfile:
    type: RuntimeDefault

# Container Security Context to be set on workload
# ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
containerSecurityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true

nodeSelector: {}

tolerations: []

affinity: {}
